install.packages("swirl")
library(swirl)
swirl()
swirl()
library(swirl)
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2 + 100
mySqrt <- sqrt(z-1)
mySqrt
myDiv <- z/mySqrt
myDiv
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
1:20
pi:10
15:1
?':'
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along=my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect <- c(0.5,55,-10,6)
tf = num_vect < 1
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
?paste
paste(my_char, collapse=" ")
my_name <- c(my_char, "upkar")
my_name
paste(my_name, collapse=" ")
paste("Hello", "world", sep=" ")
paste("Hello", "world!", sep=" ")
paste(1:3, c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep="-")
x<-c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
myData <- sample(c(y,z) 100)
myData <- sample(c(y,z), 100)
myData
myNA = is.na(myData)
myNA <- is.na(myData)
myNA
myData == NA
sum <- sum(myData)
sum <- sum(myNA)
s <- sum(myNA)
sum(myNA)
myData
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
x
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2.-10)]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11,bar=3,norf=NA)
vect <- c(foo=11, bar=3, norf=NA)
vect <- c(foo = 11, bar = 3, norf = NA)
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", norf)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo","bar")]
myVector <- 1:20
myVector
dim(myVector)
lenght(myVector)
length(myVector)
dim(myVector) <- c(4,5)
dim(myVector)
attributes(myVector)
myVector
class(myVector)
myMatrix <- myVector
?matrix
myMatrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(myMatrix, myMatrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, myMatrix)
myData <- data.frame(patiends, myMatrix)
myData <- data.frame(patients, myMatrix)
myData
class(myData)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(myData) <- cnames
myDat
myData
clear
cls
exit
?cor
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
nobsDF <- complete(directory)
r <- nobsDF[nobsDF$nobs > threshold,]
print(r)
for(i in r$id){
fileStr <- paste(directory, "/", sprintf("%03d", as.numeric(i)), ".csv", sep = "")
myData <- read.csv(fileStr)
print(cor(myData$sulfate, myData$nitrate, na.rm=TRUE))
}
}
corr("specData", 150)
source('K:/coursera/data-science/r-programming/rprog-data-specdata/complete.R')
source('K:/coursera/data-science/r-programming/rprog-data-specdata/pollutantmean.R')
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
nobsDF <- complete(directory)
r <- nobsDF[nobsDF$nobs > threshold,]
print(r)
for(i in r$id){
fileStr <- paste(directory, "/", sprintf("%03d", as.numeric(i)), ".csv", sep = "")
myData <- read.csv(fileStr)
print(cor(myData$sulfate, myData$nitrate, na.rm=TRUE))
}
}
corr("specData", 150)
setwd("K:/coursera/data-science/r-programming/rprog-data-specdata")
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
nobsDF <- complete(directory)
r <- nobsDF[nobsDF$nobs > threshold,]
print(r)
for(i in r$id){
fileStr <- paste(directory, "/", sprintf("%03d", as.numeric(i)), ".csv", sep = "")
myData <- read.csv(fileStr)
print(cor(myData$sulfate, myData$nitrate, na.rm=TRUE))
}
}
corr("specData", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
nobsDF <- complete(directory)
r <- nobsDF[nobsDF$nobs > threshold,]
print(r)
for(i in r$id){
fileStr <- paste(directory, "/", sprintf("%03d", as.numeric(i)), ".csv", sep = "")
myData <- read.csv(fileStr)
print(cor(myData$sulfate, myData$nitrate, use="na.or.complete"))
}
}
corr("specData", 150)
?append
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
nobsDF <- complete(directory)
r <- nobsDF[nobsDF$nobs > threshold,]
print(r)
cr <- numeric()
for(i in r$id){
fileStr <- paste(directory, "/", sprintf("%03d", as.numeric(i)), ".csv", sep = "")
myData <- read.csv(fileStr)
append(cr, cor(myData$sulfate, myData$nitrate, use="na.or.complete"))
}
print(head(cr))
}
corr("specData", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
nobsDF <- complete(directory)
r <- nobsDF[nobsDF$nobs > threshold,]
cr <- numeric()
for(i in r$id){
fileStr <- paste(directory, "/", sprintf("%03d", as.numeric(i)), ".csv", sep = "")
myData <- read.csv(fileStr)
cr <- append(cr, cor(myData$sulfate, myData$nitrate, use="na.or.complete"))
}
print(head(cr))
}
corr("specData", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
nobsDF <- complete(directory)
r <- nobsDF[nobsDF$nobs > threshold,]
cr <- numeric()
for(i in r$id){
fileStr <- paste(directory, "/", sprintf("%03d", as.numeric(i)), ".csv", sep = "")
myData <- read.csv(fileStr)
cr <- append(cr, round(cor(myData$sulfate, myData$nitrate, use="na.or.complete"),5))
}
print(head(cr))
}
corr("specData", 150)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
source("submitscript1.R")
ls()
dir()
dir()
source("submitscript1.R")
dir()
source("submitscript1.R")
submit()
2
submit()
submit()
submit()
submit()
submit()
submit()
submit()
9
submit()
submit()
submit()
submit()
